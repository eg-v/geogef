<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="/css/output.css" rel="stylesheet">
    <title>Materials</title>
    <style>

    nav {
        background-color: rgba(45, 55, 72, 0.9);
        padding: 1rem;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 50;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .nav-links {
        display: flex;
        align-items: baseline;
        gap: 1rem;
    }

    .nav-link {
        color: #cbd5e0;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        text-decoration: none;
        font-size: 0.875rem;
        font-weight: 500;
        transition: background-color 0.3s, color 0.3s;
    }

    .nav-link:hover {
        background-color: #4a5568;
        color: #ffffff;
    }

    .nav-link.active {
        background-color: #1a202c;
        color: #ffffff;
    }

        .mt-24 {
            margin-top: 6rem; /* Ajusta esta cantidad según la altura de tu barra de navegación */
        }

        .title-margin {
            margin-top: 1rem; /* Margen superior para que el título no se superponga con la navegación */
        }
    </style>
</head>

<body class="bg-cover bg-center bg-no-repeat min-h-screen flex items-center justify-center bg-[url('/images/fondo3.jpg')]">
    <nav>
        <div class="nav-links">
            <a href="/dashboard" class="nav-link">Dashboard</a>
            <a href="/lessons_details" class="nav-link active" aria-current="page">Lecciones</a>
            <a href="/profile" class="nav-link" role="menuitem" tabindex="-1" id="user-menu-item-0">Tu Perfil</a>
            <a href="/logout" class="nav-link" role="menuitem" tabindex="-1" id="user-menu-item-2">Salir</a>
        </div>
    </nav>

    <div class="container mx-auto p-4 max-w-4xl mt-24">
        <h1 class="text-3xl font-bold text-blue-900 bg-white bg-opacity-80 p-4 rounded-lg text-center shadow-md mb-8 title-margin">
            Materiales de <%= @lesson.title %>
        </h1>

        <div class="bg-white shadow-lg rounded-lg overflow-hidden mx-auto mt-4">
            <div id="current-material" class="flex flex-col items-center p-6">
                <div class="text-xl text-gray-800 mb-4">
                    <%= @materials[0].content %>
                </div>
                <% if @materials[0].imagepath.present? %>
                <div class="material-image">
                    <svg class="w-full h-auto" viewBox="0 0 200 150">
                        <image href="/<%= @materials[0].imagepath %>" />
                    </svg>
                </div>
                <% end %>
            </div>

            <div class="flex justify-between mt-6 p-4">
                <button id="prev-button" class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 hidden">
                    Material Anterior
                </button>
                <button id="next-button" class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600">
                    Siguiente Material
                </button>
                <button id="finish-button" class="bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600 hidden">
                    Fin
                </button>
            </div>
        </div>
    </div>

    <script>
        // Elementos DOM
        const materialCard = document.getElementById('current-material');
        const nextButton = document.getElementById('next-button');
        const prevButton = document.getElementById('prev-button');
        const finishButton = document.getElementById('finish-button');
        const materials = [
            <% @materials.each do |material| %>
            '<%= material.content %>',
            <% end %>
        ];
        <% if @materials[0].imagepath.present? %>
        const flagPaths = [
            <% @materials.each do |material| %>
            '<%= material.imagepath %>',
            <% end %>
        ];
        <% end %>
        let currentIndex = 0;
        const maxIndex = materials.length - 1;

        // Función para mostrar el material actual
        function showCurrentMaterial() {
            materialCard.innerHTML = `
                <div class="text-xl text-gray-800 mb-4">${materials[currentIndex]}</div>
                <% if @materials[0].imagepath.present? %>
                <div class="material-image">
                    <svg class="w-full h-auto" viewBox="0 0 200 150">
                        <image href="/${flagPaths[currentIndex]}"/>
                    </svg>
                </div>
                <% end %>
            `;
            // Ocultar o mostrar los botones de acuerdo con la posición actual
            prevButton.classList.toggle('hidden', currentIndex === 0);
            nextButton.classList.toggle('hidden', currentIndex === maxIndex);
            finishButton.classList.toggle('hidden', currentIndex !== maxIndex);
        }

        // Función para mostrar el siguiente material
        function showNextMaterial() {
            currentIndex++;
            showCurrentMaterial();
        }

        // Función para mostrar el material anterior
        function showPrevMaterial() {
            currentIndex--;
            showCurrentMaterial();
        }

        // Función para finalizar y mostrar las opciones en una ventana emergente
        function finishLesson() {
            const decisionContainer = document.createElement('div');
            decisionContainer.classList.add('fixed', 'top-0', 'left-0', 'w-full', 'h-full', 'bg-black', 'bg-opacity-50', 'flex', 'justify-center', 'items-center');

            decisionContainer.innerHTML = `
                <div class="bg-white p-6 rounded-lg shadow-lg">
                    <p class="text-2xl text-blue-900 mb-4">Elija una opción:</p>
                    <button id="view-materials" class="modal-button bg-cyan-500 text-white text-xl py-2 px-4 rounded m-2 transform transition hover:scale-110">Volver a ver los materiales</button>
                    <button id="go-to-exam" class="modal-button bg-blue-600 text-white text-xl py-2 px-4 rounded m-2 transform transition hover:scale-110">Ir al examen</button>
                    <button id="go-to-level" class="modal-button bg-blue-400 text-white text-xl py-2 px-4 rounded m-2 transform transition hover:scale-110">Volver a la vista del nivel</button>
                </div>
            `;

            const viewMaterialsButton = decisionContainer.querySelector('#view-materials');
            const goToExamButton = decisionContainer.querySelector('#go-to-exam');
            const goToLevelButton = decisionContainer.querySelector('#go-to-level');

            viewMaterialsButton.addEventListener('click', function () {
                currentIndex = 0;
                showCurrentMaterial();
                decisionContainer.remove();
            });

            goToExamButton.addEventListener('click', function () {
                window.location.href = '/lessons/<%= @lesson.id %>/levels/<%= @level.id %>/exam';
            });

            goToLevelButton.addEventListener('click', function () {
                window.location.href = '/lessons_levels'; // Cambia '/levels' por la ruta correcta a la página de todos los niveles
            });

            document.body.appendChild(decisionContainer);
        }

        nextButton.addEventListener('click', showNextMaterial);
        prevButton.addEventListener('click', showPrevMaterial);
        finishButton.addEventListener('click', finishLesson);

        showCurrentMaterial();
    </script>
</body>

</html>
